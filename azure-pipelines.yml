# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)$(Rev:r)

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: FlutterInstall@0
  displayName: 'Instlando flutter'
  inputs:
    mode: 'auto'
    channel: 'stable'
    version: 'custom'
    customVersion: '1.22.5'

- task: FlutterBuild@0
  displayName: 'Generando el apk - $(Build.BuildNumber)'
  inputs:
    target: 'apk'
    projectDirectory: '.'

# - task: CopyFiles@2
#   displayName: 'copiando apk'
#   inputs:
#     SourceFolder: '$(Build.SourcesDirectory)/build/app/outputs/flutter-apk'
#     Contents: '**'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'
#     OverWrite: true

# - task: PublishBuildArtifacts@1
#   displayName: 'Publicando apk'
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'miapk'
#     publishLocation: 'Container'

- task: AppCenterDistribute@3
  displayName: 'Distribuyendo APK'
  inputs:
    serverEndpoint: 'app center movieapp'
    appSlug: 'jojelo.25-gmail.com/movieapp'
    appFile: '$(Build.SourcesDirectory)/build/app/outputs/flutter-apk/app-release.apk'
    buildVersion: '$(Build.BuildNumber)'
    symbolsOption: 'Android'
    releaseNotesOption: 'input'
    releaseNotesInput: 'build automatico'
    destinationType: 'groups'
    distributionGroupId: 'ed9a84a5-eb41-4fc2-aeea-723fc0fec105'